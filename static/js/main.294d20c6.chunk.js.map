{"version":3,"sources":["redux/types.js","redux/rootReducer.js","redux/actions.js","redux/rootSaga.js","redux/store.js","functions/validate.js","components/Table.js","components/ControlButtons.js","App.js","index.js"],"names":["LOAD_DEFAULT_DATA","CHANGE_CORRECT","PUT_DATA","rootReducer","produce","draft","action","type","data","payload","correctData","loadCustomData","changeCorrect","workData","watchData","getDataFromCsv","d3","call","select","state","isCorrectData","isCorrectCurData","forEach","obj","index","Object","values","key","toString","unshift","put","takeEvery","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","validatePhone","phone","replace","getDublicateId","curObj","foundObj","find","toLowerCase","id","getTableItemClass","Table","useSelector","length","className","map","title","rowData","resData","trim","Number","test","isInteger","toFixed","toUpperCase","stateStrs","split","reduce","a","b","getValid","validData","ControlButtons","inputFile","React","useRef","dispatch","useDispatch","onClick","current","click","ref","onChange","e","fileInput","target","reader","FileReader","files","readAsBinaryString","onload","fileName","name","result","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.294d20c6.chunk.js","sourcesContent":["export const LOAD_DEFAULT_DATA = 'LOAD_DEFAULT_DATA';\r\nexport const CHANGE_CORRECT = 'CHANGE_CORRECT';\r\nexport const PUT_DATA = 'PUT_DATA';\r\n","import produce from 'immer';\r\nimport { PUT_DATA, CHANGE_CORRECT } from './types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n  correctData: true,\r\n};\r\n\r\nexport const rootReducer = produce((draft, action) => {\r\n  if (action.type === PUT_DATA) {\r\n    draft.data = action.payload;\r\n  }\r\n  if (action.type === CHANGE_CORRECT) {\r\n    draft.correctData = !draft.correctData;\r\n  }\r\n}, initialState);\r\n","import { LOAD_DEFAULT_DATA, PUT_DATA, CHANGE_CORRECT } from './types';\r\n\r\nexport const loadDefaultData = () => ({\r\n  type: LOAD_DEFAULT_DATA,\r\n});\r\n\r\nexport const loadCustomData = (payload) => ({\r\n  type: PUT_DATA,\r\n  payload,\r\n});\r\n\r\nexport const changeCorrect = () => ({\r\n  type: CHANGE_CORRECT,\r\n});\r\n","import { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport * as d3 from 'd3-fetch';\r\nimport { LOAD_DEFAULT_DATA } from './types';\r\nimport { loadCustomData, changeCorrect } from './actions';\r\n\r\n// d3-fetch alows parse csv\r\nfunction getDataFromCsv() {\r\n  return d3.csv('includes/data.csv');\r\n}\r\n\r\nfunction* workData() {\r\n  const data = yield call(getDataFromCsv);\r\n  const isCorrectData = yield select((state) => state.correctData);\r\n  let isCorrectCurData = true;\r\n  // Same logic as in ControlButtons component\r\n  data.forEach((obj, index) => {\r\n    Object.values(data['columns']).forEach((key) => {\r\n      if ((key === 'Full Name' || key === 'Phone' || key === 'Email') && !obj[key]) {\r\n        isCorrectCurData = false;\r\n      }\r\n    });\r\n    obj['id'] = (index + 1).toString();\r\n  });\r\n  data['columns'].unshift('id');\r\n  if (isCorrectData !== isCorrectCurData) yield put(changeCorrect());\r\n  yield put(loadCustomData(data));\r\n}\r\n\r\nexport function* watchData() {\r\n  yield takeEvery(LOAD_DEFAULT_DATA, workData);\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { rootReducer } from './rootReducer';\r\nimport { watchData } from './rootSaga';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(sagaMiddleware, logger)),\r\n);\r\n\r\nsagaMiddleware.run(watchData);\r\n","function validatePhone(phone) {\r\n  phone = phone.replace(/\\s+/g, ''); // remove all spaces\r\n  phone = phone.replace(/^\\+1|^1/, ''); // remove +1 or 1 at the begin\r\n  return phone;\r\n}\r\n\r\nexport function getDublicateId(curObj, data) {\r\n  const foundObj = data.find((obj) => {\r\n    return (\r\n      curObj['id'] !== obj['id'] &&\r\n      (validatePhone(obj['Phone']) === validatePhone(curObj['Phone']) ||\r\n        obj['Email'].toLowerCase() === curObj['Email'].toLowerCase())\r\n    );\r\n  });\r\n  return foundObj ? foundObj.id : '';\r\n}\r\n\r\nexport function getValid(rowData, type) {\r\n  let resData = rowData[type].trim();\r\n  let isCorrectData = false;\r\n\r\n  if (Number(resData)) resData = Number(resData);\r\n\r\n  function isValidEmail(email) {\r\n    const reg = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return reg.test(email);\r\n  }\r\n\r\n  //YYYY-MM-DD or MM/DD/YYYY\r\n  function isValidDate(date) {\r\n    const reg = /((0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.](19|20)\\d\\d)|(^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])$)/;\r\n    return reg.test(date);\r\n  }\r\n\r\n  switch (type) {\r\n    case 'Full Name':\r\n      if (!Number(resData)) isCorrectData = true;\r\n      return [isCorrectData, resData];\r\n\r\n    case 'Phone':\r\n      resData = validatePhone(resData);\r\n      // 10 digits\r\n      if (resData / 10000000000 < 1 && resData / 1000000000 > 1) isCorrectData = true;\r\n      resData = '+1' + resData;\r\n      return [isCorrectData, resData];\r\n\r\n    case 'Email':\r\n      if (isValidEmail(resData)) isCorrectData = true;\r\n      return [isCorrectData, resData];\r\n\r\n    case 'Age':\r\n      if (Number.isInteger(resData) && resData >= 21) isCorrectData = true;\r\n      return [isCorrectData, resData];\r\n\r\n    case 'Experience':\r\n      if (resData >= 0 && resData < rowData['Age']) isCorrectData = true;\r\n      return [isCorrectData, resData];\r\n\r\n    case 'Yearly Income':\r\n      if (Number(resData)) {\r\n        resData = resData.toFixed(2);\r\n        if (resData < 1000000) isCorrectData = true;\r\n      }\r\n      return [isCorrectData, resData];\r\n\r\n    case 'Has Children':\r\n      resData = resData.toUpperCase();\r\n      if (resData === '') resData = 'FALSE';\r\n      if (resData === 'TRUE' || resData === 'FALSE') isCorrectData = true;\r\n      return [isCorrectData, resData];\r\n\r\n    case 'License States':\r\n      isCorrectData = true;\r\n      const stateStrs = resData.split('|');\r\n      if (stateStrs.length > 1)\r\n        // Choose the shortest one\r\n        resData = stateStrs.reduce((a, b) => (a.length <= b.length ? a : b));\r\n      return [isCorrectData, resData];\r\n\r\n    case 'Expiration Date':\r\n      if (isValidDate(resData)) isCorrectData = true;\r\n      return [isCorrectData, resData];\r\n\r\n    case 'License Number':\r\n      resData = resData.toString();\r\n      if (resData.length === 6) isCorrectData = true;\r\n      return [isCorrectData, resData];\r\n\r\n    default:\r\n      return [true, resData];\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getValid, getDublicateId } from '../functions/validate';\r\n\r\n// some classes for styles\r\nfunction getTableItemClass(index) {\r\n  return index === 1 || index === 2\r\n    ? 'w-12'\r\n    : index === 6 || index === 9 || index === 10\r\n    ? 'w-9'\r\n    : index === 3\r\n    ? 'w-20'\r\n    : '';\r\n}\r\n\r\nexport const Table = () => {\r\n  const data = useSelector((state) => state.data);\r\n  const correctData = useSelector((state) => state.correctData);\r\n\r\n  return correctData ? (\r\n    data.length ? (\r\n      <div className=\"lawyers-table\">\r\n        <ul className=\"table-title\">\r\n          {Object.values(data['columns']).map((title, index) => (\r\n            <li key={title} className={getTableItemClass(index)}>\r\n              {title}\r\n            </li>\r\n          ))}\r\n          <li>Duplicate with</li>\r\n        </ul>\r\n\r\n        {data.map((obj) => (\r\n          <ul key={obj.id} className=\"table-data\">\r\n            {Object.values(data['columns']).map((key, index) => {\r\n              // getValid returns an array with values isCorrectData(bool) and curent data\r\n              // which converts(validates) by differents cases\r\n              const [isCorrectData, validData] = getValid(obj, key);\r\n              return (\r\n                <li\r\n                  key={key + index}\r\n                  className={\r\n                    !isCorrectData\r\n                      ? 'invalid ' + getTableItemClass(index)\r\n                      : getTableItemClass(index)\r\n                  }>\r\n                  {validData}\r\n                </li>\r\n              );\r\n            })}\r\n            <li>\r\n              <span className={!getDublicateId(obj, data) ? 'v-h' : ''}>\r\n                {getDublicateId(obj, data)}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <strong>Press any button above</strong>\r\n    )\r\n  ) : (\r\n    <div className=\"incorrect-data\">File format is not correct</div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport * as d3 from 'd3-dsv';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadCustomData, loadDefaultData, changeCorrect } from '../redux/actions';\r\n\r\nexport const ControlButtons = ({ data }) => {\r\n  const inputFile = React.useRef(null);\r\n  const isCorrectData = useSelector((state) => state.correctData);\r\n  const dispatch = useDispatch();\r\n\r\n  const getDefaultDataHandler = () => {\r\n    dispatch(loadDefaultData());\r\n  };\r\n\r\n  const getCustomDataHandler = (e) => {\r\n    const fileInput = e.target;\r\n    const reader = new FileReader();\r\n\r\n    if (fileInput.files[0]) reader.readAsBinaryString(fileInput.files[0]);\r\n\r\n    reader.onload = () => {\r\n      const fileName = e.target.files[0].name;\r\n      let isCorrectCurData = true;\r\n\r\n      if (/.csv$/.test(fileName)) {\r\n        // d3-dsv library to parse csv data\r\n        const data = d3.csvParse(reader.result);\r\n        data.forEach((obj, index) => {\r\n          Object.values(data['columns']).forEach((key) => {\r\n            // check for empty data\r\n            if ((key === 'Full Name' || key === 'Phone' || key === 'Email') && !obj[key])\r\n              isCorrectCurData = false;\r\n          });\r\n          // store id\r\n          obj['id'] = (index + 1).toString();\r\n        });\r\n        data['columns'].unshift('id');\r\n        // needed when we use main buttons few times to add/hide error block (same for all changeCorrect actions)\r\n        if (isCorrectData !== isCorrectCurData) dispatch(changeCorrect());\r\n        dispatch(loadCustomData(data));\r\n        // so we can open same file few times (because of onChange event)\r\n        fileInput.value = '';\r\n      } else if (isCorrectData) dispatch(changeCorrect());\r\n    };\r\n  };\r\n\r\n  const importCustomDataHandler = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"control-buttons\">\r\n      <button className=\"import-data-button\" onClick={getDefaultDataHandler}>\r\n        Import Default Data\r\n      </button>\r\n      <button className=\"import-data-button\" onClick={importCustomDataHandler}>\r\n        Import Custom Data\r\n      </button>\r\n      <input type=\"file\" ref={inputFile} onChange={getCustomDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport './styles/style.css';\nimport { Table } from './components/Table';\nimport { ControlButtons } from './components/ControlButtons';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ControlButtons />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}